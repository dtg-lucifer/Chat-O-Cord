generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String         @id @default(uuid())
  firstName            String
  lastName             String
  email                String         @unique
  password             String
  userName             String         @unique
  joinedOn             DateTime       @default(now())
  profilePic           String?
  online               Boolean        @default(false)
  messages             Message[]
  createdConversations Conversation[] @relation("Creator")
  joinedConversations  Conversation[] @relation("Recipient")
}

model Message {
  id             String       @id @default(uuid())
  content        String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  author         User         @relation(fields: [userId], references: [id])
  userId         String
  conversation   Conversation @relation(name: "convTOmsg", fields: [conversationId], references: [id], onUpdate: Cascade)
  conversationId String
  attachment     Attachment?
}

model Attachment {
  id        String   @id @default(uuid())
  blob      Bytes
  fileName  String
  mimeType  String
  message   Message  @relation(fields: [messageId], references: [id])
  messageId String
  createdAt DateTime @default(now())

  @@unique([messageId])
}

model Conversation {
  id                 String    @id @default(uuid())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  creator            User      @relation("Creator", fields: [creatorId], references: [id])
  creatorId          String
  recipient          User      @relation("Recipient", fields: [recipientId], references: [id])
  recipientId        String
  messages           Message[] @relation(name: "convTOmsg")
  lastMessageContent String?
}
